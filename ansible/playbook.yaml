---
- name: L30Bola MacOs Setup
  gather_facts: true
  hosts: localhost
  connection: local
  tasks:
    - name: Install Homebrew
      community.general.homebrew:
        state: present
        update_homebrew: true
        upgrade_all: true
      tags:
        - brew
        - homebrew
        - install

    - name: Install Rosetta 2
      ansible.builtin.command:
        cmd: softwareupdate --install-rosetta --agree-to-license
      register: rosetta2
      changed_when: rosetta2.rc != 0
      tags:
        - rosetta2

    - name: Install packages
      community.general.homebrew:
        name:
          - agg
          - asciinema
          - asdf
          - atuin
          - awscli
          - bash
          - bash-completion@2
          - bat
          - binutils
          - calc
          - cilium-cli
          - clusterctl
          - coreutils
          - curl
          - diffutils
          - ed
          - file-formula
          - fileicon
          - findutils
          - gawk
          - git
          - git-delta
          - gnu-getopt
          - gnu-indent
          - gnu-sed
          - gnu-tar
          - gnu-which
          - gnupg
          - gnutls
          - gpatch
          - grep
          - gzip
          - htop
          - jq
          - kind
          - kubectx
          - kubespy
          - kube-ps1
          - less
          - m4
          - make
          - openssl
          - openssh
          - pipx
          - python
          - rclone
          - rsync
          - sops
          - stern
          - syncthing
          - tailscale
          - the_silver_searcher
          - tmux
          - unzip
          - vim
          - watch
          - wdiff
          - wget
          - yq
          - z
        state: present
      tags:
        - brew
        - homebrew
        - packages
        - quarantine

    # Sometimes I've seen the need to admin password, so keep an eye on this
    - name: Install cask packages
      community.general.homebrew_cask:
        name:
          - alt-tab
          # - bartender
          - background-music
          - bitwarden
          - cmake
          - dehesselle-meld
          - discord
          - docker
          - domzilla-caffeine
          - font-fira-code-nerd-font
          - font-fira-mono-nerd-font
          - font-inconsolata-nerd-font
          - font-roboto-mono-nerd-font
          - google-chrome
          - iterm2
          - logitech-g-hub
          - multitouch
          - rectangle
          - spotify
          - steelseries-gg
          - telegram-desktop
          - visual-studio-code
        state: present
      tags:
        - brew
        - homebrew
        - casks
        - quarantine

    - name: Install packages without quarantine
      community.general.homebrew:
        name:
          - grishka/grishka/neardrop
          # - youtype
        state: present
        install_options:
          - no-quarantine
      tags:
        - brew
        - homebrew
        - packages
        - no-quarantine

    - name: Install casks without quarantine
      community.general.homebrew_cask:
        name:
          - mos
          - maccy
        state: present
        install_options:
          - no-quarantine
      tags:
        - brew
        - homebrew
        - casks
        - no-quarantine

    - name: Install asdf plugins
      ansible.builtin.command:
        cmd: asdf plugin add {{ item }}
      register: asdf_plugins
      changed_when: asdf_plugins.rc != 0
      loop:
        - fzf
        - golang
        - helm
        - sops
        - kubectl
        - python
      tags:
        - asdf
        - plugins

    - name: Set global asdf versions
      ansible.builtin.command:
        cmd: asdf set -u {{ item }}
      register: asdf_global
      changed_when: asdf_global.rc != 0
      loop:
        - fzf latest
        - golang latest
        - helm latest
        - kubectl 1.30.4
        - sops 3.8.1
        - python 3.13.2
      tags:
        - asdf
        - global

    - name: Install asdf versions
      ansible.builtin.command:
        cmd: asdf install
      register: asdf_versions
      changed_when: asdf_versions.rc != 0
      tags:
        - asdf
        - versions

    - name: Set Application Icons
      ansible.builtin.command:
        cmd: fileicon set "/Applications/{{ item.name }}" "{{ item.icon }}"
      loop:
        - name: "Visual Studio Code.app"
          icon: "{{ playbook_dir }}/../icons/vscode.icns"
        - name: "Google Chrome.app"
          icon: "{{ playbook_dir }}/../icons/chrome.icns"
        - name: "Spotify.app"
          icon: "{{ playbook_dir }}/../icons/spotify.icns"
        - name: "Telegram Desktop.app"
          icon: "{{ playbook_dir }}/../icons/telegram.icns"
      register: application_icons
      changed_when: application_icons.rc != 0
      tags:
        - application
        - icons

    # Need to figure a proper way of not erroring when the plugin is already installed
    - name: Install Helm Diff plugin
      ansible.builtin.command:
        cmd: helm plugin install {{ item }}
      register: helm_diff
      changed_when: helm_diff.rc != 0
      ignore_errors: true
      with_items:
        - https://github.com/databus23/helm-diff
        - https://github.com/jzbruno/helm-import/
      tags:
        - helm
        - install
        - plugin

    - name: Clone ble.sh repository
      ansible.builtin.git:
        dest: ~/ble.sh
        clone: true
        recursive: true
        depth: 1
        repo: https://github.com/akinomyoga/ble.sh.git
      tags:
        - ble.sh
        - git

    - name: Install ble.sh
      ansible.builtin.command:
        cmd: gmake -C ble.sh install PREFIX="{{ lookup('env', 'HOME') }}/.local"
        chdir: "{{ lookup('env', 'HOME') }}"
        creates: "{{ lookup('env', 'HOME') }}/.local/share/blesh/ble.sh"
      register: ble_sh_install
      changed_when: ble_sh_install.rc != 0
      tags:
        - ble.sh
        - install

    - name: Setup dotfiles (create symbolic links)
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      with_items:
        - src: "{{ playbook_dir }}/../bash_profile"
          dest: "~/.bash_profile"
        - src: "{{ playbook_dir }}/../bashrc"
          dest: "~/.bashrc"
        - src: "{{ playbook_dir }}/../gitconfig"
          dest: "~/.gitconfig"
        - src: "{{ playbook_dir }}/../pythonrc"
          dest: "~/.pythonrc"
        - src: "{{ playbook_dir }}/../tmux.conf"
          dest: "~/.tmux.conf"
        - src: "{{ playbook_dir }}/../vimrc"
          dest: "~/.vimrc"
        - src: "{{ playbook_dir }}/../bash_completion"
          dest: "~/.bash_completion"
        - src: "{{ playbook_dir }}/../blerc"
          dest: "~/.blerc"
      tags:
        - dotfiles
        - setup
